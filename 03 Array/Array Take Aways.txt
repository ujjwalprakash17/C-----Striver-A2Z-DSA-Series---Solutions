1. Rotate Array K times Problem : 
    Approach - 2
    step - 1 : Reverse the last k elements
    step - 2 : Reverse the remaining first n - k elements
    step - 3 : Reverse the whole array



2. Dutch National Flag algorithm : 
    Use Case : when we need to sort 3 elements as 0 , 1 and 2, then to solve the problem in one pass 
    Algorithm ? 

    take low = 0, mid = 0, high = n - 1

    Rule : 
    0 -> low - 1 => contain 0 only
    low -> mid - 1 => contain 1 only
    mid -> high => contain unsorted elements only
    high + 1 -> n -1 => contain 2 only

    to maintain the above rule we will move the mid pointer and check
    case 1:
    if (a[mid] == 0) {
        swap(a[mid], a[low]);
        mid++, low++;
    }
    case 2 : 
    if(a[mid] == 1) mid ++;

    case 3 :
        if(a[mid] == 2){
            swap(a[mid], a[high])
            high--;
        }


3. Moore's Voting algorithm

4. Check If Array Pairs Are Divisible by k : 
    objective : question me dekh lo 
    Approach : 
    we are targetting the remainder of the numbers 
    the freq of first to last 
    and same as second to second last and so on.. 
    are same then it is true, otherwise it is false, 
    code see in the problem submission, 
so this gives a hint, when working on Divisible pair or something, just give a thought about the remainders



